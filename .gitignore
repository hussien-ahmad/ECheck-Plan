import math
from tkinter import *
from tkinter.messagebox import showinfo
import sys
sys.path.append('..')
from classes.banking.Check import *

class WriteECheck:

    def __init__(self, startCheckNumber=1001, accountHolders=[]):
        self.window = Tk()
        self.startCheckNumber = startCheckNumber
        self.check = None

    def display(self):
        self.window.geometry("640x200")

        # TODO: Implement the GUI layout and components
        checkNumberLabel = Label(self.window, text="{First}{Last}\n{Address\n{Phone}")
        checkNumberLabel.grid(row=0, column=0,sticky=W)
        checkNumberValue = Label(self.window, text=self.startCheckNumber)
        checkNumberValue.grid(row=0, column=2,sticky=E,padx=130)

        F = Label(self.window, text="First Bank of Me")
        F.grid(row=0, column=1,padx=100,sticky=W)

        data = Label(self.window, text="Date:")
        data.grid(row=1, column=1,sticky=E)
        self.data = Entry(self.window, width=10)
        self.data.grid(row=1, column=2)

        payeeLabel = Label(self.window, text="PAY TO THE ORDER OF:")
        payeeLabel.grid(row=2, column=0)
        self.payeeInput = Entry(self.window, width=30)
        self.payeeInput.grid(row=2, column=1)

        amountLabel = Label(self.window, text="$")
        amountLabel.grid(row=2, column=1,sticky=E)
        self.amountInput = Entry(self.window, width=10)
        self.amountInput.grid(row=2, column=2)

        text = Label(self.window, text="Zero and 00/100")
        text.grid(row=4, column=0)
        
        text1 = Label(self.window, text="DOLLARS")
        text1.grid(row=4, column=2)

        memoLabel = Label(self.window, text="Memo:")
        memoLabel.grid(row=5, column=0)
        self.memoInput = Entry(self.window, width=40)
        self.memoInput.grid(row=5, column=1)
        
        self.signature = Entry(self.window, width=10)
        self.signature.grid(row=5, column=2,ipadx=30)

        text2 = Label(self.window, text="AUTHORIZED SIGNATURE")
        text2.grid(row=6, column=2)

        submitButton = Button(self.window, text="Send Check", command=self.processCheck)
        submitButton.grid(row=7, column=2, columnspan=2)

        self.window.mainloop()

    def processCheck(self):
        """
        Validate the user input to see if the check is ready
        """
        # Check if payee is empty
        if not self.payeeInput.get().strip():
            showinfo("Error", "Please enter a payee")
            return

        # Validate check amount
        isValid, amount = self.validateCheckAmount()
        if not isValid:
            showinfo("Error", "Please enter a valid check amount")
            return

        # Create check object
        self.check = Check(self.payeeInput.get(), amount, self.memoInput.get(), self.startCheckNumber)

        # Close window
        self.window.destroy()

    def validateCheckAmount(self):
        """
        Validate the check amount input is a dollar amount
        returns a tuple (<valid - Boolean>, <amount - float>)
        """
        amount = self.amountInput.get().strip()
        if not amount:
            return False, 0.0

        try:
            # Check if input can be converted to float
            amount = float(amount)
        except ValueError:
            return False, 0.0

        # Check if input has more than two decimal places
        if math.ceil(amount*100) != math.floor(amount*100):
            return False, 0.0

        # Check if amount is greater than zero
        if amount <= 0:
            return False, 0.0

        return True, amount

    def processCheckAmount(self, amount):
        """
Fill the written check field with a text version of the amount provided
        """

#=========================================================================================
# Testing code below - DO NOT MODIFY

# Only run this code below if this is called as the main, not imported
if __name__ == '__main__':
    from utils.ledger import grab
    FILE = "ECheck"
    grab(FILE)
    window = WriteECheck(accountHolders=["Me", "Tony"])
    window.display()
    check = window.check
    if check:
        print("You created a check to {} for {} with a memo of: {}".format(check.payee, str(check), check.memo))
    else:
        print("No check created")

